<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Talks', 'doctrine');

/**
 * BaseTalks
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $fk_speakers
 * @property string $title
 * @property string $abstract
 * @property text $datepreferencefortalk
 * @property integer $linktopresentation
 * @property integer $slot
 * 
 * @method integer getId()                    Returns the current record's "id" value
 * @method integer getFkSpeakers()            Returns the current record's "fk_speakers" value
 * @method string  getTitle()                 Returns the current record's "title" value
 * @method string  getAbstract()              Returns the current record's "abstract" value
 * @method text    getDatepreferencefortalk() Returns the current record's "datepreferencefortalk" value
 * @method integer getLinktopresentation()    Returns the current record's "linktopresentation" value
 * @method integer getSlot()                  Returns the current record's "slot" value
 * @method Talks   setId()                    Sets the current record's "id" value
 * @method Talks   setFkSpeakers()            Sets the current record's "fk_speakers" value
 * @method Talks   setTitle()                 Sets the current record's "title" value
 * @method Talks   setAbstract()              Sets the current record's "abstract" value
 * @method Talks   setDatepreferencefortalk() Sets the current record's "datepreferencefortalk" value
 * @method Talks   setLinktopresentation()    Sets the current record's "linktopresentation" value
 * @method Talks   setSlot()                  Sets the current record's "slot" value
 * 
 * @package    frontendconference
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTalks extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('talks');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('fk_speakers', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('title', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('abstract', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('datepreferencefortalk', 'text', null, array(
             'type' => 'text',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('linktopresentation', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('slot', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}