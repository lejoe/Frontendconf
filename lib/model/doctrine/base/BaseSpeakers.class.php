<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Speakers', 'doctrine');

/**
 * BaseSpeakers
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property string $profession
 * @property string $city
 * @property string $company
 * @property string $twitter
 * @property string $email
 * @property string $website
 * @property string $img
 * 
 * @method integer  getId()         Returns the current record's "id" value
 * @method string   getName()       Returns the current record's "name" value
 * @method string   getProfession() Returns the current record's "profession" value
 * @method string   getCity()       Returns the current record's "city" value
 * @method string   getCompany()    Returns the current record's "company" value
 * @method string   getTwitter()    Returns the current record's "twitter" value
 * @method string   getEmail()      Returns the current record's "email" value
 * @method string   getWebsite()    Returns the current record's "website" value
 * @method string   getImg()        Returns the current record's "img" value
 * @method Speakers setId()         Sets the current record's "id" value
 * @method Speakers setName()       Sets the current record's "name" value
 * @method Speakers setProfession() Sets the current record's "profession" value
 * @method Speakers setCity()       Sets the current record's "city" value
 * @method Speakers setCompany()    Sets the current record's "company" value
 * @method Speakers setTwitter()    Sets the current record's "twitter" value
 * @method Speakers setEmail()      Sets the current record's "email" value
 * @method Speakers setWebsite()    Sets the current record's "website" value
 * @method Speakers setImg()        Sets the current record's "img" value
 * 
 * @package    frontendconference
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseSpeakers extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('speakers');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('name', 'string', 32, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 32,
             ));
        $this->hasColumn('profession', 'string', 32, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 32,
             ));
        $this->hasColumn('city', 'string', 32, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 32,
             ));
        $this->hasColumn('company', 'string', 32, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 32,
             ));
        $this->hasColumn('twitter', 'string', 32, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 32,
             ));
        $this->hasColumn('email', 'string', 64, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 64,
             ));
        $this->hasColumn('website', 'string', 64, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 64,
             ));
        $this->hasColumn('img', 'string', 32, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 32,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}